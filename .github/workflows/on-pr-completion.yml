name: Validate Pull Request Approvals

on:
  pull_request:
    types: [closed]

jobs:
  check-approvals:
    if: github.event.pull_request.merged == true  # Run only if the PR is merged
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Get Pull Request Details
      id: get-details
      uses: actions/github-script@v6
      with:
        script: |
          const pullRequestNumber = context.payload.pull_request.number;

          // Fetch pull request reviews
          const { data: reviews } = await github.rest.pulls.listReviews({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pullRequestNumber,
          });

          // Filter for approvals and include timestamps
          const approvers = reviews
            .filter(review => review.state === "APPROVED")
            .map(review => ({
              login: review.user.login,
              id: review.user.id,
              name: review.user.name || review.user.login,
              avatar_url: review.user.avatar_url,
              approved_at: review.submitted_at, // Add the datetime of approval
            }));

          if (approvers.length === 0) {
            core.setFailed("This pull request has no approvals and cannot be merged.");
          }

          // Fetch commits in the pull request
          const { data: commits } = await github.rest.pulls.listCommits({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: pullRequestNumber,
          });

          const commitDetails = commits.map(commit => ({
            message: commit.commit.message,
            author: commit.commit.author.name,
            sha: commit.sha,
          }));

          // Build the final JSON output
          const output = {
            pull_request_number: pullRequestNumber,
            approvers,
            commits: commitDetails,
          };

          // Output as JSON
          core.setOutput("pr_details", JSON.stringify(output, null, 2));

    - name: Save PR Details to JSON
      run: |
        echo '${{ steps.get-details.outputs.pr_details }}' > pr_details.json

    - name: Upload PR Details as Artifact
      uses: actions/upload-artifact@v3
      with:
        name: pr-details-json
        path: pr_details.json
