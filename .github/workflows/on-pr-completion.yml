name: Validate Pull Request Approvals

on:
  pull_request:
    types: [closed]

jobs:
  check-approvals:
    if: github.event.pull_request.merged == true  # Run only if the PR is merged
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Get Pull Request Approvals
      id: get-approvals
      uses: actions/github-script@v6
      with:
        script: |
          const { data: reviews } = await github.rest.pulls.listReviews({
            owner: context.repo.owner,
            repo: context.repo.repo,
            pull_number: context.payload.pull_request.number,
          });

          // Filter for approved reviews
          const approvers = reviews
            .filter(review => review.state === "APPROVED")
            .map(review => ({
              login: review.user.login,
              id: review.user.id,
              name: review.user.name || review.user.login,
              avatar_url: review.user.avatar_url,
            }));

          if (approvers.length === 0) {
            core.setFailed("This pull request has no approvals and cannot be merged.");
          }

          core.setOutput("approvers", JSON.stringify(approvers, null, 2));

    - name: Save Approvers to JSON
      if: success()
      run: |
        echo '${{ steps.get-approvals.outputs.approvers }}' > approvers.json

    - name: Upload JSON as Artifact
      if: success()
      uses: actions/upload-artifact@v3
      with:
        name: approvers-json
        path: approvers.json
